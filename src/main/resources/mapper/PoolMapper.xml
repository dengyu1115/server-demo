<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.elt.server.mapper.PoolMapper">
    <resultMap id="BaseResultMap" type="com.elt.server.model.Pool">
        <id column="id_pool" jdbcType="VARCHAR" property="idPool"/>
        <result column="id_relation" jdbcType="VARCHAR" property="idRelation"/>
        <result column="id_user" jdbcType="VARCHAR" property="idUser"/>
        <result column="priority" jdbcType="VARCHAR" property="priority"/>
        <result column="biz_model" jdbcType="VARCHAR" property="bizModel"/>
        <result column="org_code" jdbcType="VARCHAR" property="orgCode"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate"/>
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy"/>
    </resultMap>
    <resultMap id="PoolPriority" type="com.elt.server.model.PoolPriority" extends="BaseResultMap"/>

    <sql id="Base_Column_List">
        id_pool, id_relation, id_user, priority, biz_model, org_code, created_date, created_by,
        updated_date, updated_by
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pool
        where id_pool = #{idPool,jdbcType=VARCHAR}
    </select>

    <select id="listAfter" resultMap="PoolPriority">
        select
        <include refid="Base_Column_List"/>
        from pool
        where id_pool &gt; #{idPool,jdbcType=VARCHAR}
        order by id_pool
        limit #{limit}
    </select>

    <select id="listByTime" resultMap="PoolPriority">
        select
        <include refid="Base_Column_List"/>
        from pool
        where created_date &gt; #{start,jdbcType=TIMESTAMP} and created_date &lt; #{start,jdbcType=TIMESTAMP}
        order by created_date
        limit #{begin},#{limit}
    </select>

    <select id="listHighestPriorities" resultMap="BaseResultMap">
        select t2.*
        from permission t1
        join pool t2 on t1.biz_model = t2.biz_model and t1.org_code = t2.org_code
        left join priority_biz t3 on t2.biz_model = t3.biz_model
        left join priority_org t4 on t2.biz_model = t4.biz_model and t2.org_code = t4.org_code
        where t1.id_user = #{idUser,jdbcType=VARCHAR} and t2.id_user is null
        order by ifnull(t2.priority,'zzz'),ifnull(t3.priority,'zzz'),ifnull(t4.priority,'zzz'),t2.created_date
        limit 20
    </select>

    <select id="checkFetched" resultType="java.lang.String">
        select distinct id_pool
        from pool
        where id_pool in
        <foreach collection="ids" item="i" open="(" close=")" separator=",">
            #{i,jdbcType=VARCHAR}
        </foreach>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from pool
        where id_pool = #{idPool,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.elt.server.model.Pool">
        insert into pool (id_pool, id_relation, id_user,
        priority, biz_model, org_code,
        created_date, created_by, updated_date,
        updated_by)
        values (#{idPool,jdbcType=VARCHAR}, #{idRelation,jdbcType=VARCHAR}, #{idUser,jdbcType=VARCHAR},
        #{priority,jdbcType=VARCHAR}, #{bizModel,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR},
        #{createdDate,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, #{updatedDate,jdbcType=TIMESTAMP},
        #{updatedBy,jdbcType=VARCHAR})
    </insert>

    <insert id="insertCopy" parameterType="com.elt.server.model.Pool">
        insert into pool_copy (id_pool, id_relation, id_user, priority, biz_model, org_code,
        created_date, created_by, updated_date, updated_by) values
        (#{idPool,jdbcType=VARCHAR}, #{idRelation,jdbcType=VARCHAR}, #{idUser,jdbcType=VARCHAR},
        #{priority,jdbcType=VARCHAR}, #{bizModel,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR},
        #{createdDate,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, #{updatedDate,jdbcType=TIMESTAMP},
        #{updatedBy,jdbcType=VARCHAR})
    </insert>

    <update id="bindToUser" parameterType="com.elt.server.model.Pool">
        update pool
        set id_user = #{idUser,jdbcType=VARCHAR}
        where id_pool = #{idPool,jdbcType=VARCHAR}
        and id_user is null
    </update>

    <update id="batchMerge" parameterType="com.elt.server.model.Pool">
        replace into pool (id_pool, id_relation, id_user,
        priority, biz_model, org_code,
        created_date, created_by, updated_date,
        updated_by)
        values
        <foreach collection="list" item="i" separator=",">
            (#{i.idPool,jdbcType=VARCHAR}, #{i.idRelation,jdbcType=VARCHAR}, #{i.idUser,jdbcType=VARCHAR},
            #{i.priority,jdbcType=VARCHAR}, #{i.bizModel,jdbcType=VARCHAR}, #{i.orgCode,jdbcType=VARCHAR},
            #{i.createdDate,jdbcType=TIMESTAMP}, #{i.createdBy,jdbcType=VARCHAR}, #{i.updatedDate,jdbcType=TIMESTAMP},
            #{i.updatedBy,jdbcType=VARCHAR})
        </foreach>
    </update>

    <insert id="insertSelective" parameterType="com.elt.server.model.Pool">
        insert into pool
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="idPool != null">
                id_pool,
            </if>
            <if test="idRelation != null">
                id_relation,
            </if>
            <if test="idUser != null">
                id_user,
            </if>
            <if test="priority != null">
                priority,
            </if>
            <if test="bizModel != null">
                biz_model,
            </if>
            <if test="orgCode != null">
                org_code,
            </if>
            <if test="createdDate != null">
                created_date,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="updatedDate != null">
                updated_date,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="idPool != null">
                #{idPool,jdbcType=VARCHAR},
            </if>
            <if test="idRelation != null">
                #{idRelation,jdbcType=VARCHAR},
            </if>
            <if test="idUser != null">
                #{idUser,jdbcType=VARCHAR},
            </if>
            <if test="priority != null">
                #{priority,jdbcType=VARCHAR},
            </if>
            <if test="bizModel != null">
                #{bizModel,jdbcType=VARCHAR},
            </if>
            <if test="orgCode != null">
                #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedDate != null">
                #{updatedDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.elt.server.model.Pool">
        update pool
        <set>
            <if test="idRelation != null">
                id_relation = #{idRelation,jdbcType=VARCHAR},
            </if>
            <if test="idUser != null">
                id_user = #{idUser,jdbcType=VARCHAR},
            </if>
            <if test="priority != null">
                priority = #{priority,jdbcType=VARCHAR},
            </if>
            <if test="bizModel != null">
                biz_model = #{bizModel,jdbcType=VARCHAR},
            </if>
            <if test="orgCode != null">
                org_code = #{orgCode,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                created_date = #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedDate != null">
                updated_date = #{updatedDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy,jdbcType=VARCHAR},
            </if>
        </set>
        where id_pool = #{idPool,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.elt.server.model.Pool">
        update pool
        set id_relation = #{idRelation,jdbcType=VARCHAR},
        id_user = #{idUser,jdbcType=VARCHAR},
        priority = #{priority,jdbcType=VARCHAR},
        biz_model = #{bizModel,jdbcType=VARCHAR},
        org_code = #{orgCode,jdbcType=VARCHAR},
        created_date = #{createdDate,jdbcType=TIMESTAMP},
        created_by = #{createdBy,jdbcType=VARCHAR},
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
        updated_by = #{updatedBy,jdbcType=VARCHAR}
        where id_pool = #{idPool,jdbcType=VARCHAR}
    </update>
</mapper>